{"ast":null,"code":"import _defineProperty from \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\code\\\\goToWhere\\\\train-ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\code\\\\goToWhere\\\\train-ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\code\\\\goToWhere\\\\train-ticket\\\\src\\\\TodoList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, PureComponent, createContext, lazy, Suspense, Fragment, memo, useState, useEffect, useContext, useMemo, useRef, useCallback } from 'react';\nimport './TodoList.css';\nimport * as actions from './actionCreators';\nlet idSeq = Date.now();\nconst LS_key = '_$get_';\n\nfunction bindActionCreators(actions, dispatch) {\n  const ret = {};\n\n  for (let key in actions) {\n    actions[key] = function (...args) {\n      const eachAction = actions[key];\n      dispatch(eachAction(...args));\n    };\n  }\n\n  console.log('...ret', ret);\n  return ret;\n}\n\nfunction Control(props) {\n  // const { dispatch } = props\n  const addTodo = props.addTodo;\n  console.log('control', props);\n  const inputRef = useRef();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newText = inputRef.current.value.trim();\n\n    if (newText.length === 0) {\n      return;\n    }\n\n    addTodo({\n      id: ++idSeq,\n      text: newText,\n      complete: false\n    }); // actions.addToDo({\n    //     id: ++idSeq,\n    //     text: newText,\n    //     complete: false\n    // })\n    // dispatch(actions.createAdd({\n    //     id: ++idSeq,\n    //     text: newText,\n    //     complete: false\n    // }))\n    // dispatch({\n    //     type:'add',\n    //     payload: {\n    //         id: ++idSeq,\n    //         text: newText,\n    //         complete: false\n    //     }\n    // })\n\n    inputRef.current.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"todos\"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"new-todo\",\n    ref: inputRef,\n    type: \"text\",\n    placeholder: \"What needs to be done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n}\n\nfunction TodoItem(props) {\n  const _props$todo = props.todo,\n        id = _props$todo.id,\n        text = _props$todo.text,\n        complete = _props$todo.complete,\n        dispatch = props.dispatch;\n\n  const handleChange = () => {\n    dispatch(actions.createToggle(id)); // dispatch({\n    //     type: 'toggle',\n    //     payload:id\n    // })\n    // toggleTodo(id)\n  };\n\n  const handleClick = () => {\n    dispatch(actions.createRemove(id)); // dispatch({\n    //     type: 'remove',\n    //     payload:id\n    // })\n    // removeTodo(id)\n  };\n\n  return React.createElement(\"li\", {\n    className: \"todo-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: handleChange,\n    checked: complete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: complete ? 'complete' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, text), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\\xD7\"));\n}\n\nfunction Todos(props) {\n  const dispatch = props.dispatch,\n        todos = props.todos;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"todo_list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, todos.map(item => // <TodoItem todo={item} removeTodo={removeTodo} toggleTodo={toggleTodo}>\n  React.createElement(TodoItem, {\n    todo: item,\n    dispatch: dispatch,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, item.text))));\n}\n\nfunction TodoList() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const addTodo = useCallback(todo => {\n    setTodos(todos => [...todos, todo]);\n    dispatch({\n      type: 'add',\n      payload: todo\n    });\n  }, []);\n  const removeTodo = useCallback(id => {\n    setTodos(todos => todos.filter(todo => {\n      return todo.id !== id;\n    }));\n  }, []);\n  const toggleTodo = useCallback(id => {\n    setTodos(todos => todos.map(todo => {\n      return todo.id === id ? _objectSpread({}, todo, {\n        complete: !todo.complete\n      }) : todo;\n    }));\n  }, []);\n  const dispatch = useCallback(action => {\n    const type = action.type,\n          payload = action.payload;\n\n    switch (type) {\n      case 'add':\n        setTodos(todos => [...todos, payload]);\n        break;\n\n      case 'set':\n        setTodos(payload);\n\n      case 'remove':\n        setTodos(todos => todos.filter(todo => {\n          return todo.id !== action.payload;\n        }));\n\n      case 'toggle':\n        setTodos(todos => todos.map(todo => {\n          return todo.id === action.payload ? _objectSpread({}, todo, {\n            complete: !todo.complete\n          }) : todo;\n        }));\n    }\n  }, []);\n  useEffect(() => {\n    const todos = JSON.parse(localStorage.getItem(LS_key || '[]'));\n    console.log(todos);\n    dispatch(actions.createSet(todos)); // dispatch({\n    //     type: 'set',\n    //     payload:todos\n    // })\n    // setTodos(todos)\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LS_key, JSON.stringify(todos));\n  }, [todos]);\n  return React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Control, Object.assign({}, bindActionCreators(actions, dispatch), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(Todos, {\n    todos: todos,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/learning/前端学习/react/code/goToWhere/train-ticket/src/TodoList.js"],"names":["React","Component","PureComponent","createContext","lazy","Suspense","Fragment","memo","useState","useEffect","useContext","useMemo","useRef","useCallback","actions","idSeq","Date","now","LS_key","bindActionCreators","dispatch","ret","key","args","eachAction","console","log","Control","props","addTodo","inputRef","onSubmit","e","preventDefault","newText","current","value","trim","length","id","text","complete","TodoItem","todo","handleChange","createToggle","handleClick","createRemove","Todos","todos","map","item","TodoList","setTodos","type","payload","removeTodo","filter","toggleTodo","action","JSON","parse","localStorage","getItem","createSet","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent, createContext, lazy, Suspense, Fragment, memo, useState, useEffect, useContext, useMemo, useRef, useCallback } from 'react';\r\nimport './TodoList.css'\r\nimport * as actions from './actionCreators'\r\n\r\n\r\nlet idSeq = Date.now()\r\nconst LS_key = '_$get_'\r\n\r\nfunction bindActionCreators(actions, dispatch) {\r\n    const ret = {}\r\n    for (let key in actions) {\r\n        actions[key] = function (...args) {\r\n            const eachAction = actions[key]\r\n            dispatch(eachAction(...args))\r\n        }\r\n    }\r\n    console.log('...ret',ret);\r\n    return ret\r\n}\r\n\r\nfunction Control(props) {\r\n    // const { dispatch } = props\r\n    const { addTodo } = props\r\n    console.log('control',props)\r\n    const inputRef = useRef()\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newText = inputRef.current.value.trim()\r\n        if (newText.length === 0) {\r\n            return;\r\n        }\r\n\r\n        addTodo({\r\n            id: ++idSeq,\r\n            text: newText,\r\n            complete: false\r\n        })\r\n\r\n        // actions.addToDo({\r\n        //     id: ++idSeq,\r\n        //     text: newText,\r\n        //     complete: false\r\n        // })\r\n\r\n        // dispatch(actions.createAdd({\r\n        //     id: ++idSeq,\r\n        //     text: newText,\r\n        //     complete: false\r\n        // }))\r\n        // dispatch({\r\n        //     type:'add',\r\n        //     payload: {\r\n        //         id: ++idSeq,\r\n        //         text: newText,\r\n        //         complete: false\r\n        //     }\r\n        // })\r\n        inputRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <div className='control'>\r\n            <h1>todos</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    className='new-todo'\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    placeholder='What needs to be done'\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TodoItem(props) {\r\n    const {\r\n        todo: {\r\n            id,\r\n            text,\r\n            complete\r\n        },\r\n        dispatch\r\n    } = props\r\n    \r\n    \r\n    const handleChange = () => {\r\n        dispatch(actions.createToggle(id))\r\n        // dispatch({\r\n        //     type: 'toggle',\r\n        //     payload:id\r\n        // })\r\n        // toggleTodo(id)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        dispatch(actions.createRemove(id))\r\n        // dispatch({\r\n        //     type: 'remove',\r\n        //     payload:id\r\n        // })\r\n        // removeTodo(id)\r\n    }\r\n    return (\r\n        <li className='todo-item'>\r\n        <input\r\n            type='checkbox'\r\n            onChange={handleChange}\r\n            checked={complete}\r\n            ></input>\r\n            <label className={complete ? 'complete' : ''}>{text}</label>\r\n            <button onClick={handleClick}>&#xd7;</button>\r\n    </li>\r\n    )\r\n}\r\n\r\nfunction Todos(props) {\r\n    const {dispatch,todos} = props\r\n    return (\r\n        <div>\r\n            <ul className='todo_list'>\r\n                {\r\n                    todos.map(item => (\r\n                        // <TodoItem todo={item} removeTodo={removeTodo} toggleTodo={toggleTodo}>\r\n                        <TodoItem todo={item} dispatch={dispatch} key={item.id}>\r\n                            {item.text}\r\n                        </TodoItem>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n    \r\n    const addTodo = useCallback((todo) => {\r\n        setTodos(todos => [...todos, todo])\r\n        dispatch({\r\n            type: 'add',\r\n            payload:todo\r\n        })\r\n    },[])\r\n    const removeTodo = useCallback((id) => {\r\n        setTodos(todos => todos.filter(todo => {\r\n            return todo.id !== id\r\n        }))\r\n    },[])\r\n\r\n    const toggleTodo = useCallback((id) => {\r\n        setTodos(todos => todos.map(todo => {\r\n            return todo.id === id\r\n                ? {\r\n                    ...todo,\r\n                    complete: !todo.complete\r\n                }\r\n                : todo;\r\n        }))\r\n    }, [])\r\n\r\n    const dispatch = useCallback((action) => {\r\n        const { type, payload } = action\r\n        switch (type) {\r\n            case 'add':\r\n                setTodos(todos => [...todos,payload])\r\n                break;\r\n            case 'set':\r\n                setTodos(payload)\r\n            case 'remove':\r\n                setTodos(todos => todos.filter(todo => {\r\n                    return todo.id !== action.payload\r\n                }))\r\n            case 'toggle':\r\n                setTodos(todos => todos.map(todo => {\r\n                    return todo.id === action.payload\r\n                        ? {\r\n                            ...todo,\r\n                            complete: !todo.complete\r\n                        }\r\n                        : todo;\r\n                }))\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        const todos = JSON.parse(localStorage.getItem(LS_key || '[]'))\r\n        console.log(todos);\r\n        dispatch(actions.createSet(todos))\r\n        // dispatch({\r\n        //     type: 'set',\r\n        //     payload:todos\r\n        // })\r\n        // setTodos(todos)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LS_key, JSON.stringify(todos))\r\n    },[todos])\r\n\r\n    return (\r\n        <div className='todo-list'>\r\n            {/* <Control addTodo={addTodo}></Control> */}\r\n            {/* <Control dispatch={dispatch}></Control> */}\r\n            <Control {\r\n                ...bindActionCreators(actions,dispatch)\r\n            }></Control>\r\n            {/* <Todos todos={todos} removeTodo={removeTodo} toggleTodo={toggleTodo}></Todos> */}\r\n            <Todos todos={todos} dispatch={dispatch}></Todos>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}