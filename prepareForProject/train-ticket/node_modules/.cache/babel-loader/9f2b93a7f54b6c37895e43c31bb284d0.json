{"ast":null,"code":"import _slicedToArray from \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\code\\\\goToWhere\\\\train-ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\code\\\\goToWhere\\\\train-ticket\\\\src\\\\App.js\";\nimport React, { Component, PureComponent, createContext, lazy, Suspense, Fragment, memo, useState, useEffect, useContext } from 'react';\nconst About = lazy(() => import('./About'));\nconst BatteryContext = createContext(55);\nconst OnBool = createContext();\nconst ParentContext = createContext();\n\nclass Leaf extends Component {\n  render() {\n    const bool = this.context;\n    console.log('...', bool);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"lllll-----\", String(bool)));\n  }\n\n}\n\nLeaf.contextType = OnBool;\n\nclass Middle extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"middle\", React.createElement(Leaf, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst A = memo(function A(props) {\n  console.log('....A');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.A);\n}); // class A extends PureComponent{\n//   render() {\n//     console.log('...A');\n//     return (\n//       <div>\n//         {this.props.A}\n//       </div>\n//     )\n//   }\n// }\n\nclass B extends PureComponent {\n  render() {\n    console.log('...B');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.B);\n  }\n\n}\n\nfunction UseEffectExample() {\n  const _useState = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        size = _useState2[0],\n        setSize = _useState2[1];\n\n  useEffect(() => {\n    window.addEventListener('resize', e => {\n      setSize({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight\n      });\n    }, false);\n    return () => {\n      window.removeEventListener('resize', e => {\n        setSize({\n          width: document.documentElement.clientWidth,\n          height: document.documentElement.clientHeight\n        });\n      }, false);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u9762\\u79EF \", size.width + 'X' + size.height, \" \"));\n}\n\nfunction UseConTextExample() {\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(ParentContext.Provider, {\n    value: count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(UseConTextExampleReceive, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })));\n}\n\nfunction UseConTextExampleReceive() {\n  const count = useContext(ParentContext);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, count);\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: 59,\n      aaa: false,\n      c: 1,\n      d: 2\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        value = _this$state.value,\n        aaa = _this$state.aaa,\n        c = _this$state.c,\n        d = _this$state.d;\n    console.log('parent', c, d);\n    return (\n      /**\n       * suspense的使用\n       */\n      // <div>\n      //   <Suspense fallback={<div>loading</div>}>\n      //     <About></About>\n      //   </Suspense>\n      // </div>\n\n      /**\n       * memo的使用\n       * \n       */\n      // <Fragment>\n      //   <button onClick={()=>{this.setState({c:c++})}} ></button>\n      //   <A A={c}></A>\n      //   <B B={d}></B>\n      // </Fragment>\n\n      /**\n       * useEffect的使用\n       */\n      // <UseEffectExample></UseEffectExample>\n\n      /**\n       * useContext的使用\n       */\n      React.createElement(UseConTextExample, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }) // <div>\n      //  <BatteryContext.Provider value={this.state.value}>\n      //   <OnBool.Provider value = {aaa}>\n      //     <button onClick={() => { this.setState({ value: value - 1 }) }}> -1</button>\n      //     <button onClick={() => { this.setState({ aaa: !aaa }) }}> switch</button>\n      //     <Middle></Middle>\n      //     </OnBool.Provider>\n      //  </BatteryContext.Provider>\n      // </div>\n\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/learning/前端学习/react/code/goToWhere/train-ticket/src/App.js"],"names":["React","Component","PureComponent","createContext","lazy","Suspense","Fragment","memo","useState","useEffect","useContext","About","BatteryContext","OnBool","ParentContext","Leaf","render","bool","context","console","log","String","contextType","Middle","A","props","B","UseEffectExample","width","document","documentElement","clientWidth","height","clientHeight","size","setSize","window","addEventListener","e","removeEventListener","UseConTextExample","count","setCount","UseConTextExampleReceive","App","state","value","aaa","c","d"],"mappings":"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","sourcesContent":["import React, { Component,PureComponent, createContext, lazy, Suspense,Fragment, memo, useState, useEffect, useContext } from 'react';\n\nconst About = lazy(() => import ('./About'))\n\nconst BatteryContext = createContext(55)\nconst OnBool = createContext()\n\nconst ParentContext = createContext()\n\nclass Leaf extends Component{\n  static contextType = OnBool\n  render() {\n    const bool = this.context\n    console.log('...',bool)\n    return (\n      <div>\n        {/* <OnBoolContext.Consumer>\n                {a => <h1>B: ---- S:{String(a)}</h1>}\n        </OnBoolContext.Consumer> */}\n        \n        {/* <BatteryContext.Consumer>\n         \n          {\n            battery => (\n              <OnBool.Consumer>\n                {a => <h1>B:{battery} ---- S:{String(a)}</h1>}\n              </OnBool.Consumer>\n            )\n            }\n          \n        </BatteryContext.Consumer> */}\n        <div>\n          lllll-----{String(bool)}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nclass Middle extends Component{\n  render() {\n    return (\n      <div>middle\n        <Leaf></Leaf>\n      </div>\n    )\n  }\n}\n\n\nconst A = memo( function A(props) {\n  console.log('....A');\n  return(<div>\n    {props.A}\n  </div>)\n})\n// class A extends PureComponent{\n//   render() {\n//     console.log('...A');\n//     return (\n//       <div>\n//         {this.props.A}\n//       </div>\n//     )\n//   }\n// }\n\nclass B extends PureComponent{\n  render() {\n    console.log('...B');\n    return (\n      <div>\n        {this.props.B}\n      </div>\n    )\n  }\n}\n\nfunction UseEffectExample() {\n  const [size, setSize] = useState({\n    width: document.documentElement.clientWidth,\n    height:document.documentElement.clientHeight\n  })\n  useEffect(() => { \n    window.addEventListener('resize', (e) => {\n      setSize({\n        width: document.documentElement.clientWidth,\n        height:document.documentElement.clientHeight\n      })\n    },false)\n\n    return () => {\n      window.removeEventListener('resize',(e) => {\n        setSize({\n          width: document.documentElement.clientWidth,\n          height:document.documentElement.clientHeight\n        })\n      },false)\n    }\n  },[])\n  \n  return (\n    <div>\n      <span>面积 {size.width+'X'+size.height} </span>\n    </div>\n  )\n}\n\n\nfunction UseConTextExample() {\n  \n  const [count,setCount] = useState(0)\n  return (\n    <Fragment>\n      <button onClick={()=>{setCount(count + 1)}}></button>\n      <ParentContext.Provider value={count}>\n        <UseConTextExampleReceive>\n\n        </UseConTextExampleReceive>\n      </ParentContext.Provider>\n    </Fragment>\n  )\n}\nfunction UseConTextExampleReceive() {\n  const count = useContext(ParentContext)\n  return (\n    <div>\n      {count}\n    </div>\n  )\n}\n\nclass App extends Component{\n  state = {\n    value: 59,\n    aaa: false,\n    c: 1,\n    d: 2\n  }\n  render() {\n    let { value, aaa, c, d } = this.state\n    console.log('parent',c,d);\n    return (\n      /**\n       * suspense的使用\n       */\n      // <div>\n      //   <Suspense fallback={<div>loading</div>}>\n      //     <About></About>\n      //   </Suspense>\n      // </div>\n      /**\n       * memo的使用\n       * \n       */\n      // <Fragment>\n      //   <button onClick={()=>{this.setState({c:c++})}} ></button>\n      //   <A A={c}></A>\n      //   <B B={d}></B>\n      // </Fragment>\n\n      /**\n       * useEffect的使用\n       */\n      // <UseEffectExample></UseEffectExample>\n      \n      /**\n       * useContext的使用\n       */\n      <UseConTextExample></UseConTextExample>\n\n\n      // <div>\n      //  <BatteryContext.Provider value={this.state.value}>\n      //   <OnBool.Provider value = {aaa}>\n      //     <button onClick={() => { this.setState({ value: value - 1 }) }}> -1</button>\n      //     <button onClick={() => { this.setState({ aaa: !aaa }) }}> switch</button>\n      //     <Middle></Middle>\n      //     </OnBool.Provider>\n        \n      //  </BatteryContext.Provider>\n      // </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}