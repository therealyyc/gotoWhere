{"ast":null,"code":"import _slicedToArray from \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\gotoWhere\\\\prepareForProject\\\\train-ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\gotoWhere\\\\prepareForProject\\\\train-ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\learning\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\\\gotoWhere\\\\prepareForProject\\\\train-ticket\\\\src\\\\TodoList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, PureComponent, createContext, lazy, Suspense, Fragment, memo, useState, useEffect, useContext, useMemo, useRef, useCallback } from 'react';\nimport './TodoList.css';\nimport * as actions from './actionCreators';\nlet idSeq = Date.now();\nconst LS_key = '_$get_';\n\nfunction bindActionCreators(actions, dispatch) {\n  const ret = {};\n\n  for (let key in actions) {\n    ret[key] = function (...args) {\n      const eachAction = actions[key];\n      dispatch(eachAction(...args));\n    };\n  }\n\n  return ret;\n}\n/**\r\n * \r\n * @param {*} reducers \r\n * 与reducer对象中更新相对应的至，最后返回原来的值merge新的值\r\n */\n\n\nfunction combineReducers(reducers) {\n  return function reducer(state, action) {\n    const changed = {};\n\n    for (let key in reducers) {\n      changed[key] = reducers[key](state[key], action);\n    }\n\n    return _objectSpread({}, state, {}, changed);\n  };\n}\n\nfunction Control(props) {\n  // const { dispatch } = props\n  const addTodo = props.addTodo;\n  const inputRef = useRef();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newText = inputRef.current.value.trim();\n\n    if (newText.length === 0) {\n      return;\n    }\n\n    addTodo({\n      id: ++idSeq,\n      text: newText,\n      complete: false\n    }); // actions.addToDo({\n    //     id: ++idSeq,\n    //     text: newText,\n    //     complete: false\n    // })\n    // dispatch(actions.createAdd({\n    //     id: ++idSeq,\n    //     text: newText,\n    //     complete: false\n    // }))\n    // dispatch({\n    //     type:'add',\n    //     payload: {\n    //         id: ++idSeq,\n    //         text: newText,\n    //         complete: false\n    //     }\n    // })\n\n    inputRef.current.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"todos\"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"new-todo\",\n    ref: inputRef,\n    type: \"text\",\n    placeholder: \"What needs to be done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })));\n}\n\nfunction TodoItem(props) {\n  const _props$todo = props.todo,\n        id = _props$todo.id,\n        text = _props$todo.text,\n        complete = _props$todo.complete,\n        removeTodo = props.removeTodo,\n        toggleTodo = props.toggleTodo;\n  console.log('...props', props);\n\n  const handleChange = () => {\n    toggleTodo(id); // dispatch(actions.createToggle(id))\n    // dispatch({\n    //     type: 'toggle',\n    //     payload:id\n    // })\n    // toggleTodo(id)\n  };\n\n  const handleClick = () => {\n    removeTodo(id); // dispatch(actions.createRemove(id))\n    // dispatch({\n    //     type: 'remove',\n    //     payload:id\n    // })\n    // removeTodo(id)\n  };\n\n  return React.createElement(\"li\", {\n    className: \"todo-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: handleChange,\n    checked: complete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: complete ? 'complete' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, text), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"\\xD7\"));\n}\n\nfunction Todos(props) {\n  const removeTodo = props.removeTodo,\n        toggleTodo = props.toggleTodo,\n        todos = props.todos;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"todo_list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, todos.map(item => // <TodoItem todo={item} removeTodo={removeTodo} toggleTodo={toggleTodo}>\n  // <TodoItem todo={item} dispatch={dispatch} key={item.id}>\n  React.createElement(TodoItem, {\n    todo: item,\n    removeTodo: removeTodo,\n    toggleTodo: toggleTodo,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, item.text))));\n}\n\nfunction TodoList() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        incrementCount = _useState4[0],\n        setIncrementCount = _useState4[1];\n\n  const addTodo = useCallback(todo => {\n    setTodos(todos => [...todos, todo]);\n    dispatch({\n      type: 'add',\n      payload: todo\n    });\n  }, []);\n  const removeTodo = useCallback(id => {\n    setTodos(todos => todos.filter(todo => {\n      return todo.id !== id;\n    }));\n  }, []);\n  const toggleTodo = useCallback(id => {\n    setTodos(todos => todos.map(todo => {\n      return todo.id === id ? _objectSpread({}, todo, {\n        complete: !todo.complete\n      }) : todo;\n    }));\n  }, []);\n  const reducers = {\n    todos(state, action) {\n      const type = action.type,\n            payload = action.payload; // const { todos ,incrementCount} = state\n\n      switch (type) {\n        case 'set':\n          return payload;\n\n        case 'add':\n          return [...state, payload];\n\n        case 'remove':\n          return state.filter(todo => {\n            return todo.id !== action.payload;\n          });\n\n        case 'toggle':\n          return state.map(todo => {\n            return todo.id === action.payload ? _objectSpread({}, todo, {\n              complete: !todo.complete\n            }) : todo;\n          });\n\n        default:\n          console.log('111');\n      }\n\n      return state;\n    },\n\n    incrementCount(state, action) {\n      const type = action.type;\n\n      switch (type) {\n        case 'set':\n          return state + 1;\n\n        case 'add':\n          return state + 1;\n\n        default:\n          console.log('111');\n      }\n\n      return state;\n    }\n\n  }; // function reducer(state, action) {\n  //     const { type, payload } = action\n  //     const { todos ,incrementCount} = state\n  //     switch (type) {\n  //         case 'set':\n  //             return {\n  //                 ...state,\n  //                 todos: payload,\n  //                 incrementCount: incrementCount + 1\n  //             }\n  //         case 'add':\n  //             return {\n  //                 ...state,\n  //                 todos: [...todos, payload],\n  //                 incrementCount: incrementCount + 1\n  //             }\n  //         case 'remove':\n  //                 return {\n  //                     ...state,\n  //                     todos:todos.filter(todo => {\n  //                         return todo.id !== action.payload\n  //                     })\n  //                 }\n  //         case 'toggle':\n  //                 return {\n  //                     ...state,\n  //                     todos:todos.map(todo => {\n  //                         return todo.id === action.payload\n  //                             ? {\n  //                                 ...todo,\n  //                                 complete: !todo.complete\n  //                             }\n  //                             : todo;\n  //                     })\n  //                 }\n  //         default:\n  //             console.log('111');\n  //     }\n  //     return state;\n  // }\n\n  const reducer = combineReducers(reducers);\n  const dispatch = useCallback(action => {\n    const state = {\n      todos,\n      incrementCount\n    };\n    const setters = {\n      todos: setTodos,\n      incrementCount: setIncrementCount\n    };\n    const newState = reducer(state, action);\n\n    for (let key in newState) {\n      setters[key](newState[key]);\n    }\n\n    action.reduce(function (lastTodos, action) {\n      return [...lastTodos, action.payload];\n    }, todos); // const { type, payload } = action\n    // switch (type) {\n    //     case 'add':\n    //         setTodos(todos => [...todos,payload])\n    //         break;\n    //     case 'set':\n    //         setTodos(payload)\n    //         break;\n    //     case 'remove':\n    //         setTodos(todos => todos.filter(todo => {\n    //             return todo.id !== action.payload\n    //         }))\n    //         break;\n    //     case 'toggle':\n    //         setTodos(todos => todos.map(todo => {\n    //             return todo.id === action.payload\n    //                 ? {\n    //                     ...todo,\n    //                     complete: !todo.complete\n    //                 }\n    //                 : todo;\n    //         }))\n    //         break;\n    //     default:\n    //         console.log('111')\n    // }\n  }, [todos, incrementCount]);\n  useEffect(() => {\n    const todos = JSON.parse(localStorage.getItem(LS_key || '[]'));\n    dispatch(actions.createSet(todos)); // dispatch({\n    //     type: 'set',\n    //     payload:todos\n    // })\n    // setTodos(todos)\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LS_key, JSON.stringify(todos));\n  }, [todos]);\n  return React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(Control, Object.assign({}, bindActionCreators({\n    addTodo: actions.createAdd\n  }, dispatch), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  })), React.createElement(Todos, Object.assign({\n    todos: todos\n  }, bindActionCreators({\n    removeTodo: actions.createRemove,\n    toggleTodo: actions.createToggle\n  }, dispatch), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/learning/前端学习/react/gotoWhere/prepareForProject/train-ticket/src/TodoList.js"],"names":["React","Component","PureComponent","createContext","lazy","Suspense","Fragment","memo","useState","useEffect","useContext","useMemo","useRef","useCallback","actions","idSeq","Date","now","LS_key","bindActionCreators","dispatch","ret","key","args","eachAction","combineReducers","reducers","reducer","state","action","changed","Control","props","addTodo","inputRef","onSubmit","e","preventDefault","newText","current","value","trim","length","id","text","complete","TodoItem","todo","removeTodo","toggleTodo","console","log","handleChange","handleClick","Todos","todos","map","item","TodoList","setTodos","incrementCount","setIncrementCount","type","payload","filter","setters","newState","reduce","lastTodos","JSON","parse","localStorage","getItem","createSet","setItem","stringify","createAdd","createRemove","createToggle"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent, createContext, lazy, Suspense, Fragment, memo, useState, useEffect, useContext, useMemo, useRef, useCallback } from 'react';\r\nimport './TodoList.css'\r\nimport * as actions from './actionCreators'\r\n\r\n\r\nlet idSeq = Date.now()\r\nconst LS_key = '_$get_'\r\n\r\nfunction bindActionCreators(actions, dispatch) {\r\n    const ret = {}\r\n    for (let key in actions) {\r\n        ret[key] = function (...args) {\r\n            const eachAction = actions[key]\r\n            dispatch(eachAction(...args))\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} reducers \r\n * 与reducer对象中更新相对应的至，最后返回原来的值merge新的值\r\n */\r\nfunction combineReducers(reducers) {\r\n    return function reducer(state, action) {\r\n        const changed = {}\r\n        for (let key in reducers) {\r\n            changed[key] = reducers[key](state[key],action)\r\n        }\r\n        return {\r\n            ...state,\r\n            ...changed\r\n        }\r\n    }\r\n}\r\n\r\nfunction Control(props) {\r\n    // const { dispatch } = props\r\n    const { addTodo } = props\r\n    const inputRef = useRef()\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newText = inputRef.current.value.trim()\r\n        if (newText.length === 0) {\r\n            return;\r\n        }\r\n\r\n        addTodo({\r\n            id: ++idSeq,\r\n            text: newText,\r\n            complete: false\r\n        })\r\n\r\n        // actions.addToDo({\r\n        //     id: ++idSeq,\r\n        //     text: newText,\r\n        //     complete: false\r\n        // })\r\n\r\n        // dispatch(actions.createAdd({\r\n        //     id: ++idSeq,\r\n        //     text: newText,\r\n        //     complete: false\r\n        // }))\r\n        // dispatch({\r\n        //     type:'add',\r\n        //     payload: {\r\n        //         id: ++idSeq,\r\n        //         text: newText,\r\n        //         complete: false\r\n        //     }\r\n        // })\r\n        inputRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <div className='control'>\r\n            <h1>todos</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    className='new-todo'\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    placeholder='What needs to be done'\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TodoItem(props) {\r\n    const {\r\n        todo: {\r\n            id,\r\n            text,\r\n            complete\r\n        },\r\n        removeTodo,\r\n        toggleTodo\r\n    } = props\r\n    console.log('...props',props)\r\n    \r\n    \r\n    const handleChange = () => {\r\n        toggleTodo(id)\r\n        \r\n        // dispatch(actions.createToggle(id))\r\n        // dispatch({\r\n        //     type: 'toggle',\r\n        //     payload:id\r\n        // })\r\n        // toggleTodo(id)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        removeTodo(id)\r\n        // dispatch(actions.createRemove(id))\r\n        // dispatch({\r\n        //     type: 'remove',\r\n        //     payload:id\r\n        // })\r\n        // removeTodo(id)\r\n    }\r\n    return (\r\n        <li className='todo-item'>\r\n        <input\r\n            type='checkbox'\r\n            onChange={handleChange}\r\n            checked={complete}\r\n            ></input>\r\n            <label className={complete ? 'complete' : ''}>{text}</label>\r\n            <button onClick={handleClick}>&#xd7;</button>\r\n    </li>\r\n    )\r\n}\r\n\r\nfunction Todos(props) {\r\n    const {removeTodo,toggleTodo,todos} = props\r\n    return (\r\n        <div>\r\n            <ul className='todo_list'>\r\n                {\r\n                    todos.map(item => (\r\n                        // <TodoItem todo={item} removeTodo={removeTodo} toggleTodo={toggleTodo}>\r\n                        // <TodoItem todo={item} dispatch={dispatch} key={item.id}>\r\n                        <TodoItem todo={item} removeTodo={removeTodo} toggleTodo={toggleTodo}  key={item.id}>\r\n                            {item.text}\r\n                        </TodoItem>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n    const [incrementCount,setIncrementCount] = useState(0) \r\n    \r\n    const addTodo = useCallback((todo) => {\r\n        setTodos(todos => [...todos, todo])\r\n        dispatch({\r\n            type: 'add',\r\n            payload:todo\r\n        })\r\n    },[])\r\n    const removeTodo = useCallback((id) => {\r\n        setTodos(todos => todos.filter(todo => {\r\n            return todo.id !== id\r\n        }))\r\n    },[])\r\n\r\n    const toggleTodo = useCallback((id) => {\r\n        setTodos(todos => todos.map(todo => {\r\n            return todo.id === id\r\n                ? {\r\n                    ...todo,\r\n                    complete: !todo.complete\r\n                }\r\n                : todo;\r\n        }))\r\n    }, [])\r\n\r\n    const reducers = {\r\n        todos(state, action) {\r\n        const { type, payload } = action\r\n        // const { todos ,incrementCount} = state\r\n        switch (type) {\r\n            case 'set':\r\n                return payload\r\n            case 'add':\r\n                return [...state, payload]\r\n                \r\n            case 'remove':\r\n                return state.filter(todo => {\r\n                            return todo.id !== action.payload\r\n                        })\r\n    \r\n            case 'toggle':\r\n                return state.map(todo => {\r\n                        return todo.id === action.payload\r\n                            ? {\r\n                                ...todo,\r\n                                complete: !todo.complete\r\n                            }\r\n                            : todo;\r\n                })\r\n                    \r\n            default:\r\n                console.log('111');\r\n        }\r\n        return state;\r\n        },\r\n        incrementCount(state, action) {\r\n            const { type} = action\r\n            switch (type) {\r\n                case 'set':\r\n                    return state + 1\r\n                case 'add':\r\n                    return state + 1\r\n                default:\r\n                    console.log('111');\r\n            }\r\n            return state\r\n        }\r\n    }\r\n    // function reducer(state, action) {\r\n    //     const { type, payload } = action\r\n    //     const { todos ,incrementCount} = state\r\n    //     switch (type) {\r\n    //         case 'set':\r\n    //             return {\r\n    //                 ...state,\r\n    //                 todos: payload,\r\n    //                 incrementCount: incrementCount + 1\r\n    //             }\r\n    //         case 'add':\r\n    //             return {\r\n    //                 ...state,\r\n    //                 todos: [...todos, payload],\r\n    //                 incrementCount: incrementCount + 1\r\n    //             }\r\n    //         case 'remove':\r\n    //                 return {\r\n    //                     ...state,\r\n    //                     todos:todos.filter(todo => {\r\n    //                         return todo.id !== action.payload\r\n    //                     })\r\n    //                 }\r\n    //         case 'toggle':\r\n    //                 return {\r\n    //                     ...state,\r\n    //                     todos:todos.map(todo => {\r\n    //                         return todo.id === action.payload\r\n    //                             ? {\r\n    //                                 ...todo,\r\n    //                                 complete: !todo.complete\r\n    //                             }\r\n    //                             : todo;\r\n    //                     })\r\n    //                 }\r\n    //         default:\r\n    //             console.log('111');\r\n    //     }\r\n    //     return state;\r\n    // }\r\n\r\n    const reducer = combineReducers(reducers)\r\n\r\n    const dispatch = useCallback((action) => {\r\n        const state = {\r\n            todos,\r\n            incrementCount\r\n        }\r\n        const setters = {\r\n            todos: setTodos,\r\n            incrementCount:setIncrementCount\r\n        }\r\n\r\n        const newState = reducer(state, action)\r\n        \r\n        for (let key in newState) {\r\n            setters[key](newState[key])\r\n        }\r\n\r\n        action.reduce(function (lastTodos, action) {\r\n            return [...lastTodos,action.payload]\r\n        },todos)\r\n        // const { type, payload } = action\r\n        // switch (type) {\r\n        //     case 'add':\r\n        //         setTodos(todos => [...todos,payload])\r\n        //         break;\r\n        //     case 'set':\r\n        //         setTodos(payload)\r\n        //         break;\r\n        //     case 'remove':\r\n        //         setTodos(todos => todos.filter(todo => {\r\n        //             return todo.id !== action.payload\r\n        //         }))\r\n        //         break;\r\n        //     case 'toggle':\r\n        //         setTodos(todos => todos.map(todo => {\r\n        //             return todo.id === action.payload\r\n        //                 ? {\r\n        //                     ...todo,\r\n        //                     complete: !todo.complete\r\n        //                 }\r\n        //                 : todo;\r\n        //         }))\r\n        //         break;\r\n        //     default:\r\n        //         console.log('111')\r\n        // }\r\n    },[todos,incrementCount])\r\n\r\n    useEffect(() => {\r\n        const todos = JSON.parse(localStorage.getItem(LS_key || '[]'))\r\n        dispatch(actions.createSet(todos))\r\n        // dispatch({\r\n        //     type: 'set',\r\n        //     payload:todos\r\n        // })\r\n        // setTodos(todos)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LS_key, JSON.stringify(todos))\r\n    },[todos])\r\n\r\n    return (\r\n        <div className='todo-list'>\r\n            {/* <Control addTodo={addTodo}></Control> */}\r\n            {/* <Control dispatch={dispatch}></Control> */}\r\n            <Control {\r\n                ...bindActionCreators({\r\n                    addTodo:actions.createAdd\r\n                },dispatch)\r\n            }></Control>\r\n            {/* <Todos todos={todos} removeTodo={removeTodo} toggleTodo={toggleTodo}></Todos> */}\r\n            {/* <Todos todos={todos} dispatch={dispatch}></Todos> */}\r\n            <Todos todos={todos} {...bindActionCreators({\r\n                removeTodo: actions.createRemove,\r\n                toggleTodo: actions.createToggle\r\n            },dispatch)}></Todos>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}